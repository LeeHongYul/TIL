오늘 배운점
배열의 개수 구하는 방법에서 먼저 정렬을 해줘야 편하다. 또한 범위연산자를 통하여 어디서부터 어디까지 계산살지 정할수있다.
let list = sides.sorted()
return (list[1] - list[0] + 1...list[1]).count + (list[1]..<list[0] + list[1]).count - 1
//list.max(), listmin()을 사용할수도 있었다

Guard문 문법

guard condition else{
statements
}
1. condition는  boolean 표현식이다
2. guard문에서 else 필수
3. 해당 코드를 중료해야한다return.throw,continue 가드문이 호출된 코드 종료
4. 코드 끝나면 transfer control 제어를 전달한다.
if문이랑 guard문 차이점
중첩발생 x, 코드가 깔끔해짐
평가후 실행 실행 후 평가

repeat-while: 먼저 실행시키고 조건 확인

범위 연산자 관련 내용
lower bound …upperbound
closed range, half-open

for 루프상수 in 반복할 범위

2의 배수, 

for a in 1 ... 10 {

if a.isMultiple(of: 2) {

result += a

.isMultiple(of: ) ~의 배수 값을 추출 할 수 있다.

어려웠던 내용
defer: 연기한다, 미리 코드를 예약을한다.

부족한 내용/해결 못한 내용


느낌점
코드를 짤 때 띄어쓰기, 드래그, 줄바꿈 주의해야 하고 깔끔하게 쓰도록 습관을 만들어한다. 과제를 제출했을 때 별로 고칠 부분이 없어 보였는데 막상 
많이 고칠게 많아서 작은 거 하나하나 신경을 써야 한다.
