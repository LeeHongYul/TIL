오늘 배운 내용

2차원 배열에 대해 공부했다.

var dots = [[Int]]() //2차원 배열 선업 하는 방법

dots = [[1, 4], [9, 2], [3, 8], [11, 6]]

//2차원 배열안에 [x1,x2]에 있는 각 각 x1,와 x2 에 접근할려며 따로 함수를 만들어서 (ex getInclination) dot1[0], dot1[0] 접근을 했다.

private func getInclination(_ dot1: [Int], _ dot2: [Int]) -> Double { Double(dot1[1] - dot2[1]) / Double(dot1[0] - dot2[0]) }

print(getInclination(dots[0], dots[2]))
//[1,4] [3,8]에서 3 - 1 ,8 - 4 출력 하는 코드

//다른 방법은 let을 빼서 계산하는 케이스도 있었음
    let a = dots[0]
    let b = dots[1]
    let c = dots[2]
    let d = dots[3]

    func degree(_ a: [Int], _ b: [Int]) -> Float {
        let (x0, y0) = (a[0], a[1])
        let (x1, y1) = (b[0], b[1])
        return Float(y1 - y0) / Float(x1 - x0)
    }

어려웠던 내용
2차원 배열의 x1,x2 원소에 대한 접근 방법을 몰랐었다.


부족한 내용/ 해결 못한 내용



느낀점
